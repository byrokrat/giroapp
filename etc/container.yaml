parameters:
    env(GIROAPP_PATH): 'giroapp'
    user.dir: '%env(GIROAPP_PATH)%'
    plugins.dir: 'plugins'

imports:
    - { resource: db.yaml }
    - { resource: fs.yaml }

services:
    _defaults:
        public: false
        autowire: true

    Symfony\Component\Console\Input\InputInterface:
        class: ~
        public: true
        synthetic: true

    std_out:
        class: Symfony\Component\Console\Output\OutputInterface
        public: true
        synthetic: true

    err_out:
        class: Symfony\Component\Console\Output\OutputInterface
        public: true
        synthetic: true

    std_in:
        class: Streamer\Stream
        public: true
        synthetic: true
        autowire: false

    Symfony\Component\Console\Output\OutputInterface:
        alias: 'std_out'

    Symfony\Component\Console\Helper\QuestionHelper:
        class: ~
        public: true
        synthetic: true

    byrokrat\giroapp\Builder\:
        resource: '../src/Builder/*'

    byrokrat\giroapp\Console\:
        public: true
        resource: '../src/Console/*'
        exclude: '../src/Console/CommandWrapper.php'

    byrokrat\giroapp\Console\ImportCommand:
        class: ~
        public: true
        arguments:
            - '@Symfony\Component\EventDispatcher\EventDispatcher'
            - '@fs_cwd_reader'
            - '@std_in'

    byrokrat\giroapp\Console\ValidateCommand:
        class: ~
        public: true
        arguments:
            - '@fs_user_dir_reader'
            - "@=service('byrokrat\\\\giroapp\\\\Mapper\\\\Schema\\\\DonorSchema').getJsonSchema()"

    byrokrat\giroapp\State\:
        resource: '../src/State/*'

    byrokrat\giroapp\Utils\:
        resource: '../src/Utils/*'

    Symfony\Component\EventDispatcher\EventDispatcher:
        class: ~
        configurator: 'byrokrat\giroapp\DI\PluginLoader:loadPlugins'

    byrokrat\giroapp\DI\PluginLoader:
        class: ~
        arguments: ['%user.dir%/%plugins.dir%', '@fs_user_dir']

    byrokrat\giroapp\ApplicationMonitor:
        class: ~
        tags:
            - { name: event_subscriber }

    byrokrat\giroapp\Listener\LoggingListener:
        class: ~
        arguments: ['@db_log_collection']
        tags:
            - { name: event_listener, event: ERROR_EVENT, method: onLogEvent, priority: 10 }
            - { name: event_listener, event: WARNING_EVENT, method: onLogEvent, priority: 10 }
            - { name: event_listener, event: INFO_EVENT, method: onLogEvent, priority: 10 }

    byrokrat\giroapp\Listener\OutputtingListener:
        class: ~
        arguments: ['@std_out', '@err_out']
        tags:
            - { name: event_listener, event: ERROR_EVENT, priority: -10 }
            - { name: event_listener, event: WARNING_EVENT, priority: -10 }
            - { name: event_listener, event: INFO_EVENT, priority: -10 }
            - { name: event_listener, event: DEBUG_EVENT, priority: -10 }

    byrokrat\giroapp\Listener\ExitStatusListener:
        class: ~
        tags:
            - { name: event_listener, event: ERROR_EVENT, method: onFailure }
            - { name: event_listener, event: WARNING_EVENT, method: onFailure }

    byrokrat\giroapp\Listener\ImportingListener:
        class: ~
        tags:
            - { name: event_listener, event: IMPORT_EVENT }

    byrokrat\giroapp\Listener\ImportingAutogiroListener:
        class: ~
        tags:
            - { name: event_listener, event: IMPORT_AUTOGIRO_EVENT }

    byrokrat\giroapp\Listener\ImportingXmlListener:
        class: ~
        tags:
            - { name: event_listener, event: IMPORT_XML_EVENT }

    byrokrat\giroapp\Listener\InvalidNodeFilteringListener:
        class: ~
        tags:
            - { name: event_listener, event: MANDATE_RESPONSE_EVENT, priority: 10 }

    byrokrat\giroapp\Listener\CommittingListener:
        class: ~
        arguments: ['@db']
        tags:
            - { name: event_listener, event: EXECUTION_END_EVENT }

    byrokrat\giroapp\Listener\MandateResponseListener:
        class: ~
        tags:
            - { name: event_listener, event: MANDATE_RESPONSE_EVENT }

    byrokrat\giroapp\Listener\MandatePersistingListener:
        class: ~
        tags:
            - { name: event_listener, event: MANDATE_ADDED_EVENT }
            - { name: event_listener, event: MANDATE_DROPPED_EVENT }
            - { name: event_listener, event: MANDATE_EDITED_EVENT, method: onMandateUpdatedEvent }
            - { name: event_listener, event: MANDATE_APPROVED_EVENT, method: onMandateUpdatedEvent }
            - { name: event_listener, event: MANDATE_REVOKED_EVENT, method: onMandateUpdatedEvent }
            - { name: event_listener, event: MANDATE_INVALID_EVENT, method: onMandateUpdatedEvent }

    byrokrat\autogiro\Parser\ParserFactory: ~

    byrokrat\autogiro\Parser\Parser:
        factory: 'byrokrat\autogiro\Parser\ParserFactory:createParser'

    byrokrat\autogiro\Writer\Writer:
        factory: 'byrokrat\autogiro\Writer\WriterFactory:createWriter'
        arguments:
            - "@=service('db_settings_mapper').findByKey('bgc_customer_number')"
            - '@organization_bg'

    byrokrat\autogiro\Writer\WriterFactory: ~

    byrokrat\banking\BankgiroFactory: ~

    byrokrat\banking\AccountFactory: ~

    byrokrat\id\IdFactory:
        class: byrokrat\id\PersonalIdFactory
        autowire: false
        arguments: ['@byrokrat\id\OrganizationIdFactory']

    byrokrat\id\OrganizationIdFactory:
        class: ~
        autowire: false

    byrokrat\giroapp\Xml\XmlMandateParser:
        class: ~
        arguments: ['@organization_id', '@organization_bg']

    byrokrat\giroapp\Xml\CustomdataTranslator: ~

    byrokrat\giroapp\Xml\XmlMandateMigrationInterface:
        class: byrokrat\giroapp\Xml\NullXmlMandateMigration

    organization_id:
        class: byrokrat\id\Id
        factory: 'byrokrat\id\IdFactory:create'
        arguments: ["@=service('db_settings_mapper').findByKey('org_number')"]

    organization_bg:
        class: byrokrat\banking\Bankgiro
        factory: 'byrokrat\banking\BankgiroFactory:createAccount'
        arguments: ["@=service('db_settings_mapper').findByKey('bankgiro')"]

    JsonSchema\Validator: ~
