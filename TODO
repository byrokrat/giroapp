# TODO

## Att vid configure veta vilka filter/formats vi har..

> Plugins behöver laddas innan commands skapas..

1. [DONE] Output och Input till CommandInterface::execute

2. [DONE] OutputProperty och InputProperty bort

3. [DONE] Enable bootstrap with empty organization data

4. [DONE] CommandInterface::configure() no longer static

5. Lazy-loading commands

6. Sedan följer hur plugins ska laddas.

    Enkel INI-reader...
        Se även 'Let SettingsMapper create objects directly #101' ang hur plugins ska hantera settings...

```php
interface PluginInterface
{
    public function loadPlugin(Environment $environment): void;
}

class Plugin implements PluginInterface
{
    private $objects;

    public function __construct(object ...$objects)
    {
        $this->objects = $objects;
    }

    public function loadPlugin(Environment $environment): void
    {
        foreach ($this->objects as $objectToLoad) {
            if ($objectToLoad instanceof CommandInterface) {
                $environment->registerCommand($objectToLoad);
            }
            // ...
        }
    }
}

// gör att en kan skriva

return new Plugin(
    new class extends XmlMandateTranslationInterface {
        public function getTranslation(string $formId): array
        {
            // osv...
        }
    }
);

class Environment
{
    /**
     * Read a giroapp setting
     */
    public function readSetting(string $key): string;

    /**
     * Register a console command
     */
    public function registerCommand(CommandInterface $command): void;

    /**
     * Register an event subscriber
     */
    public function registerSubscriber(SubscriberInterface $subscriber): void;

    /**
     * Register a custom donor filter
     */
    public function registerDonorFilter(FilterInterface $donorFilter): void;

    /**
     * Register a custom donor formatter
     */
    public function registerDonorFormatter(FormatterInterface $donorFormatter): void;

    /**
     * Set the xml mandate translation key
     *
     * TODO eller registerXmlMandateTranslation om varje formId ska ha en egen klass istället...
     * TODO lite renaming här...
     * TODO add XmlMandateTranslationInterface::getFormId(): string
     */
    public function setXmlMandateTranslation(XmlMandateTranslationInterface $xmlMandateTranslation): void;
}
```
